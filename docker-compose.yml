version: '3.8'

services:
  # Model Registry Service
  model-registry:
    build: .
    container_name: model-registry
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
      PORT: 3000
      PM2_INSTANCES: 2
      MONGODB_URI: mongodb://mongodb:27017
      REDIS_HOST: redis
      REDIS_PORT: 6379
      L1_CACHE_MAX_SIZE: 500
      L1_CACHE_TTL: 300000
      L2_CACHE_TTL: 1800000
    depends_on:
      - mongodb
      - redis
    networks:
      - model-registry-network
    volumes:
      - ./logs:/app/logs

  # MongoDB
  mongodb:
    image: mongo:6.0
    container_name: model-registry-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin123
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
    networks:
      - model-registry-network

  # Redis
  redis:
    image: redis:7-alpine
    container_name: model-registry-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - model-registry-network

  # MongoDB Express (Optional - for MongoDB UI)
  mongo-express:
    image: mongo-express:latest
    container_name: model-registry-mongo-express
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: admin123
      ME_CONFIG_MONGODB_URL: mongodb://admin:admin123@mongodb:27017/
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin123
    depends_on:
      - mongodb
    networks:
      - model-registry-network

  # Redis Commander (Optional - for Redis UI)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: model-registry-redis-commander
    restart: unless-stopped
    ports:
      - "8082:8081"
    environment:
      REDIS_HOSTS: local:redis:6379
    depends_on:
      - redis
    networks:
      - model-registry-network

networks:
  model-registry-network:
    driver: bridge

volumes:
  mongodb_data:
  mongodb_config:
  redis_data: